From d5c7a43eba53a421908bfcc5d84419fbab1b2528 Mon Sep 17 00:00:00 2001
From: AlexYaruki <alexyaruki@gmail.com>
Date: Fri, 2 Sep 2016 12:45:46 +0200
Subject: [PATCH] Fix to inlined functions definition

---
 include/sigar_util.h       |  6 +++---
 src/os/linux/linux_sigar.c | 38 +++++++++++++++++++-------------------
 2 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/include/sigar_util.h b/include/sigar_util.h
index b3c4dd7d..9545d0f6 100644
--- a/include/sigar_util.h
+++ b/include/sigar_util.h
@@ -75,11 +75,11 @@ int sigar_inet_ntoa(sigar_t *sigar,
 struct hostent *sigar_gethostbyname(const char *name,
                                     sigar_hostent_t *data);
 
-SIGAR_INLINE char *sigar_skip_line(char *buffer, int buflen);
+extern SIGAR_INLINE char *sigar_skip_line(char *buffer, int buflen);
 
-SIGAR_INLINE char *sigar_skip_token(char *p);
+extern SIGAR_INLINE char *sigar_skip_token(char *p);
 
-SIGAR_INLINE char *sigar_skip_multiple_token(char *p, int count);
+extern SIGAR_INLINE char *sigar_skip_multiple_token(char *p, int count);
 
 char *sigar_getword(char **line, char stop);
 
diff --git a/src/os/linux/linux_sigar.c b/src/os/linux/linux_sigar.c
index a3fd2301..d3b238b1 100644
--- a/src/os/linux/linux_sigar.c
+++ b/src/os/linux/linux_sigar.c
@@ -171,7 +171,7 @@ int sigar_os_open(sigar_t **sigar)
     if (status != SIGAR_OK) {
         return status;
     }
-    
+
     (*sigar)->ticks = sysconf(_SC_CLK_TCK);
 
     (*sigar)->ram = -1;
@@ -289,7 +289,7 @@ static int get_ram(sigar_t *sigar, sigar_mem_t *mem)
     if (total == 0) {
         return ENOENT;
     }
- 
+
     mem->ram = sigar->ram = total;
 
     return SIGAR_OK;
@@ -651,7 +651,7 @@ static int proc_stat_read(sigar_t *sigar, sigar_pid_t pid)
 
     time_t timenow = time(NULL);
 
-    /* 
+    /*
      * short-lived cache read/parse of last /proc/pid/stat
      * as this info is spread out across a few functions.
      */
@@ -754,7 +754,7 @@ int sigar_proc_mem_get(sigar_t *sigar, sigar_pid_t pid,
     procmem->major_faults = pstat->major_faults;
     procmem->page_faults =
         procmem->minor_faults + procmem->major_faults;
-    
+
     status = SIGAR_PROC_FILE2STR(buffer, pid, "/statm");
 
     if (status != SIGAR_OK) {
@@ -768,7 +768,7 @@ int sigar_proc_mem_get(sigar_t *sigar, sigar_pid_t pid,
     return SIGAR_OK;
 }
 
-SIGAR_INLINE sigar_uint64_t get_named_proc_token(char *buffer,
+static SIGAR_INLINE sigar_uint64_t get_named_proc_token(char *buffer,
                                                  char *token) {
   char *ptr = strstr(buffer, token);
   if (!ptr) {
@@ -782,9 +782,9 @@ int sigar_proc_cumulative_disk_io_get(sigar_t *sigar, sigar_pid_t pid,
                            sigar_proc_cumulative_disk_io_t *proc_cumulative_disk_io)
 {
     char buffer[BUFSIZ];
-    
+
     int status = SIGAR_PROC_FILE2STR(buffer, pid, "/io");
-    
+
     if (status != SIGAR_OK) {
         return status;
     }
@@ -1060,7 +1060,7 @@ int sigar_proc_modules_get(sigar_t *sigar, sigar_pid_t pid,
             break;
         }
     }
-    
+
     fclose(fp);
 
     return SIGAR_OK;
@@ -1370,11 +1370,11 @@ static int get_iostat_procp(sigar_t *sigar,
             ptr = sigar_skip_token(ptr); /* blocks */
             ptr = sigar_skip_token(ptr); /* name */
             disk->reads = sigar_strtoull(ptr); /* rio */
-            ptr = sigar_skip_token(ptr);  /* rmerge */ 
+            ptr = sigar_skip_token(ptr);  /* rmerge */
             disk->read_bytes  = sigar_strtoull(ptr); /* rsect */
             disk->rtime = sigar_strtoull(ptr); /* ruse */
             disk->writes = sigar_strtoull(ptr); /* wio */
-            ptr = sigar_skip_token(ptr);  /* wmerge */ 
+            ptr = sigar_skip_token(ptr);  /* wmerge */
             disk->write_bytes = sigar_strtoull(ptr); /* wsect */
             disk->wtime = sigar_strtoull(ptr); /* wuse */
             ptr = sigar_skip_token(ptr); /* running */
@@ -1751,7 +1751,7 @@ int sigar_net_route_list_get(sigar_t *sigar,
         }
 
         route->flags = flags;
-        
+
         sigar_net_address_set(route->destination, hex2int(net_addr, HEX_ENT_LEN));
         sigar_net_address_set(route->gateway, hex2int(gate_addr, HEX_ENT_LEN));
         sigar_net_address_set(route->mask, hex2int(mask_addr, HEX_ENT_LEN));
@@ -1768,7 +1768,7 @@ int sigar_net_interface_stat_get(sigar_t *sigar, const char *name,
     int found = 0;
     char buffer[BUFSIZ];
     FILE *fp = fopen(PROC_FS_ROOT "net/dev", "r");
-    
+
     if (!fp) {
         return errno;
     }
@@ -2068,7 +2068,7 @@ int sigar_net_connection_walk(sigar_net_connection_walker_t *walker)
         status = proc_net_read(walker,
                                PROC_FS_ROOT "net/raw",
                                SIGAR_NETCONN_RAW);
-        
+
         if (status != SIGAR_OK) {
             return status;
         }
@@ -2202,7 +2202,7 @@ sigar_tcp_get(sigar_t *sigar,
     fclose(fp);
 
     if (status == SIGAR_OK) {
-        /* assuming field order, same in 2.2, 2.4 and 2.6 kernels */ 
+        /* assuming field order, same in 2.2, 2.4 and 2.6 kernels */
         /* Tcp: RtoAlgorithm RtoMin RtoMax MaxConn */
         ptr = sigar_skip_multiple_token(ptr, 5);
         tcp->active_opens = sigar_strtoull(ptr);
@@ -2226,7 +2226,7 @@ static int sigar_proc_nfs_gets(char *file, char *tok,
     int status = ENOENT;
     int len = strlen(tok);
     FILE *fp = fopen(file, "r");
-    
+
     if (!fp) {
         return SIGAR_ENOTIMPL;
     }
@@ -2526,7 +2526,7 @@ int sigar_proc_port_get(sigar_t *sigar, int protocol,
         memcpy(&pid_name[len], ent->d_name, slen);
         len += slen;
         pid_name[len] = '\0';
-        
+
         if (stat(pid_name, &sb) < 0) {
             continue;
         }
@@ -2571,7 +2571,7 @@ int sigar_proc_port_get(sigar_t *sigar, int protocol,
                 *pid = strtoul(ent->d_name, NULL, 10);
                 return SIGAR_OK;
             }
-            
+
         }
 
         closedir(fd_dirp);
@@ -2586,7 +2586,7 @@ static void generic_vendor_parse(char *line, sigar_sys_info_t *info)
 {
     char *ptr;
     int len = 0;
-        
+
     while (*line) {
         SIGAR_SKIP_SPACE(line);
         if (!isdigit(*line)) {
@@ -2645,7 +2645,7 @@ static void redhat_vendor_parse(char *line, sigar_sys_info_t *info)
     }
 }
 
-#define is_quote(c) ((c == '\'') || (c == '"')) 
+#define is_quote(c) ((c == '\'') || (c == '"'))
 
 static void kv_parse(char *data, sigar_sys_info_t *info,
                      void (*func)(sigar_sys_info_t *, char *, char *))
